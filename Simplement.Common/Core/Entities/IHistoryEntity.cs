using System;

namespace SoftLegion.Common.Core.Entities
{
    /// <summary>
    /// Модель исторических записей.
    /// Не наследует базовую модель.
    /// </summary>
    public interface IHistoryEntity : IEntity
    {
        /// <summary>
        /// Действующая запись <c>bool</c>
        /// <remarks><c>
        /// При создании или обновлении дочерней записи, данная пометка устанавливается для актуального состояния</c></remarks>
        /// </summary>
        bool IsLastState { get; set; }

        /// <summary>
        /// ИД актуальной записи из таблицы родителя (таблицы акутальных состояний) <c>Guid</c>
        /// <remarks><c>Поле является обязательным, служит для поиска и группировки по родителю</c></remarks>
        /// </summary>
        Guid EntityId { get; set; }

        /// <summary>
        /// Поле "Действует с" <c>Datetime</c>
        /// <remarks><c>для большинства записей является тождественным полю "Дата регистрации" если не предусмотрено обратное <para/>
        /// Поле является обязательным
        /// </c></remarks>
        /// </summary>
        DateTime ActualDateFrom { get; set; }

        /// <summary>
        /// Ссылка на предыдущую запись в истории <c>Guid?</c>
        /// <remarks><c>
        /// При создании новой записи в родительской таблице, создаётся новая запись в таблице истории с пустым значением <para/>
        /// При обновлении записи в родительской таблице, создаётся новая запись в таблице истории с ссылкой на предыдущую запись</c></remarks>
        /// </summary>
        Guid? PreviousHistoryStateId { get; set; }

        /// <summary>
        /// Ссылка на следующую запись в истории <c>Guid?</c>
        /// <remarks><c>
        /// При создании новой записи в родительской таблице, создаётся новая запись в таблице истории с пустым значением <para/>
        /// При обновлении записи в родительской таблице, старая запись в истории получает обновление этого поля сылкой на новую запись</c></remarks>
        /// </summary>
        Guid? NextHistoryStateId { get; set; }
    }
}